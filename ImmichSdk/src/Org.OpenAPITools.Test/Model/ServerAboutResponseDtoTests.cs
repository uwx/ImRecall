/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing ServerAboutResponseDto
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ServerAboutResponseDtoTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ServerAboutResponseDto
        //private ServerAboutResponseDto instance;

        public ServerAboutResponseDtoTests()
        {
            // TODO uncomment below to create an instance of ServerAboutResponseDto
            //instance = new ServerAboutResponseDto();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ServerAboutResponseDto
        /// </summary>
        [Fact]
        public void ServerAboutResponseDtoInstanceTest()
        {
            // TODO uncomment below to test "IsType" ServerAboutResponseDto
            //Assert.IsType<ServerAboutResponseDto>(instance);
        }

        /// <summary>
        /// Test the property 'Licensed'
        /// </summary>
        [Fact]
        public void LicensedTest()
        {
            // TODO unit test for the property 'Licensed'
        }

        /// <summary>
        /// Test the property 'VarVersion'
        /// </summary>
        [Fact]
        public void VarVersionTest()
        {
            // TODO unit test for the property 'VarVersion'
        }

        /// <summary>
        /// Test the property 'VersionUrl'
        /// </summary>
        [Fact]
        public void VersionUrlTest()
        {
            // TODO unit test for the property 'VersionUrl'
        }

        /// <summary>
        /// Test the property 'Build'
        /// </summary>
        [Fact]
        public void BuildTest()
        {
            // TODO unit test for the property 'Build'
        }

        /// <summary>
        /// Test the property 'BuildImage'
        /// </summary>
        [Fact]
        public void BuildImageTest()
        {
            // TODO unit test for the property 'BuildImage'
        }

        /// <summary>
        /// Test the property 'BuildImageUrl'
        /// </summary>
        [Fact]
        public void BuildImageUrlTest()
        {
            // TODO unit test for the property 'BuildImageUrl'
        }

        /// <summary>
        /// Test the property 'BuildUrl'
        /// </summary>
        [Fact]
        public void BuildUrlTest()
        {
            // TODO unit test for the property 'BuildUrl'
        }

        /// <summary>
        /// Test the property 'Exiftool'
        /// </summary>
        [Fact]
        public void ExiftoolTest()
        {
            // TODO unit test for the property 'Exiftool'
        }

        /// <summary>
        /// Test the property 'Ffmpeg'
        /// </summary>
        [Fact]
        public void FfmpegTest()
        {
            // TODO unit test for the property 'Ffmpeg'
        }

        /// <summary>
        /// Test the property 'Imagemagick'
        /// </summary>
        [Fact]
        public void ImagemagickTest()
        {
            // TODO unit test for the property 'Imagemagick'
        }

        /// <summary>
        /// Test the property 'Libvips'
        /// </summary>
        [Fact]
        public void LibvipsTest()
        {
            // TODO unit test for the property 'Libvips'
        }

        /// <summary>
        /// Test the property 'Nodejs'
        /// </summary>
        [Fact]
        public void NodejsTest()
        {
            // TODO unit test for the property 'Nodejs'
        }

        /// <summary>
        /// Test the property 'Repository'
        /// </summary>
        [Fact]
        public void RepositoryTest()
        {
            // TODO unit test for the property 'Repository'
        }

        /// <summary>
        /// Test the property 'RepositoryUrl'
        /// </summary>
        [Fact]
        public void RepositoryUrlTest()
        {
            // TODO unit test for the property 'RepositoryUrl'
        }

        /// <summary>
        /// Test the property 'SourceCommit'
        /// </summary>
        [Fact]
        public void SourceCommitTest()
        {
            // TODO unit test for the property 'SourceCommit'
        }

        /// <summary>
        /// Test the property 'SourceRef'
        /// </summary>
        [Fact]
        public void SourceRefTest()
        {
            // TODO unit test for the property 'SourceRef'
        }

        /// <summary>
        /// Test the property 'SourceUrl'
        /// </summary>
        [Fact]
        public void SourceUrlTest()
        {
            // TODO unit test for the property 'SourceUrl'
        }

        /// <summary>
        /// Test the property 'ThirdPartyBugFeatureUrl'
        /// </summary>
        [Fact]
        public void ThirdPartyBugFeatureUrlTest()
        {
            // TODO unit test for the property 'ThirdPartyBugFeatureUrl'
        }

        /// <summary>
        /// Test the property 'ThirdPartyDocumentationUrl'
        /// </summary>
        [Fact]
        public void ThirdPartyDocumentationUrlTest()
        {
            // TODO unit test for the property 'ThirdPartyDocumentationUrl'
        }

        /// <summary>
        /// Test the property 'ThirdPartySourceUrl'
        /// </summary>
        [Fact]
        public void ThirdPartySourceUrlTest()
        {
            // TODO unit test for the property 'ThirdPartySourceUrl'
        }

        /// <summary>
        /// Test the property 'ThirdPartySupportUrl'
        /// </summary>
        [Fact]
        public void ThirdPartySupportUrlTest()
        {
            // TODO unit test for the property 'ThirdPartySupportUrl'
        }
    }
}
