/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ServerApi
    /// </summary>
    public sealed class ServerApiTests : ApiTestsBase
    {
        private readonly IServerApi _instance;

        public ServerApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IServerApi>();
        }

        /// <summary>
        /// Test DeleteServerLicense
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteServerLicenseAsyncTest()
        {
            await _instance.DeleteServerLicenseAsync();
        }

        /// <summary>
        /// Test GetAboutInfo
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetAboutInfoAsyncTest()
        {
            var response = await _instance.GetAboutInfoAsync();
            var model = response.Ok();
            Assert.IsType<ServerAboutResponseDto>(model);
        }

        /// <summary>
        /// Test GetApkLinks
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetApkLinksAsyncTest()
        {
            var response = await _instance.GetApkLinksAsync();
            var model = response.Ok();
            Assert.IsType<ServerApkLinksDto>(model);
        }

        /// <summary>
        /// Test GetServerConfig
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetServerConfigAsyncTest()
        {
            var response = await _instance.GetServerConfigAsync();
            var model = response.Ok();
            Assert.IsType<ServerConfigDto>(model);
        }

        /// <summary>
        /// Test GetServerFeatures
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetServerFeaturesAsyncTest()
        {
            var response = await _instance.GetServerFeaturesAsync();
            var model = response.Ok();
            Assert.IsType<ServerFeaturesDto>(model);
        }

        /// <summary>
        /// Test GetServerLicense
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetServerLicenseAsyncTest()
        {
            var response = await _instance.GetServerLicenseAsync();
            var model = response.Ok();
            Assert.IsType<LicenseResponseDto>(model);
        }

        /// <summary>
        /// Test GetServerStatistics
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetServerStatisticsAsyncTest()
        {
            var response = await _instance.GetServerStatisticsAsync();
            var model = response.Ok();
            Assert.IsType<ServerStatsResponseDto>(model);
        }

        /// <summary>
        /// Test GetServerVersion
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetServerVersionAsyncTest()
        {
            var response = await _instance.GetServerVersionAsync();
            var model = response.Ok();
            Assert.IsType<ServerVersionResponseDto>(model);
        }

        /// <summary>
        /// Test GetStorage
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetStorageAsyncTest()
        {
            var response = await _instance.GetStorageAsync();
            var model = response.Ok();
            Assert.IsType<ServerStorageResponseDto>(model);
        }

        /// <summary>
        /// Test GetSupportedMediaTypes
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetSupportedMediaTypesAsyncTest()
        {
            var response = await _instance.GetSupportedMediaTypesAsync();
            var model = response.Ok();
            Assert.IsType<ServerMediaTypesResponseDto>(model);
        }

        /// <summary>
        /// Test GetTheme
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetThemeAsyncTest()
        {
            var response = await _instance.GetThemeAsync();
            var model = response.Ok();
            Assert.IsType<ServerThemeDto>(model);
        }

        /// <summary>
        /// Test GetVersionCheck
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetVersionCheckAsyncTest()
        {
            var response = await _instance.GetVersionCheckAsync();
            var model = response.Ok();
            Assert.IsType<VersionCheckStateResponseDto>(model);
        }

        /// <summary>
        /// Test GetVersionHistory
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetVersionHistoryAsyncTest()
        {
            var response = await _instance.GetVersionHistoryAsync();
            var model = response.Ok();
            Assert.IsType<List<ServerVersionHistoryResponseDto>>(model);
        }

        /// <summary>
        /// Test PingServer
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task PingServerAsyncTest()
        {
            var response = await _instance.PingServerAsync();
            var model = response.Ok();
            Assert.IsType<ServerPingResponse>(model);
        }

        /// <summary>
        /// Test SetServerLicense
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SetServerLicenseAsyncTest()
        {
            LicenseKeyDto licenseKeyDto = default!;
            var response = await _instance.SetServerLicenseAsync(licenseKeyDto);
            var model = response.Ok();
            Assert.IsType<LicenseResponseDto>(model);
        }
    }
}
