/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing MemoriesApi
    /// </summary>
    public sealed class MemoriesApiTests : ApiTestsBase
    {
        private readonly IMemoriesApi _instance;

        public MemoriesApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IMemoriesApi>();
        }

        /// <summary>
        /// Test AddMemoryAssets
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task AddMemoryAssetsAsyncTest()
        {
            Guid id = default!;
            BulkIdsDto bulkIdsDto = default!;
            var response = await _instance.AddMemoryAssetsAsync(id, bulkIdsDto);
            var model = response.Ok();
            Assert.IsType<List<BulkIdResponseDto>>(model);
        }

        /// <summary>
        /// Test CreateMemory
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CreateMemoryAsyncTest()
        {
            MemoryCreateDto memoryCreateDto = default!;
            var response = await _instance.CreateMemoryAsync(memoryCreateDto);
            var model = response.Created();
            Assert.IsType<MemoryResponseDto>(model);
        }

        /// <summary>
        /// Test DeleteMemory
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteMemoryAsyncTest()
        {
            Guid id = default!;
            await _instance.DeleteMemoryAsync(id);
        }

        /// <summary>
        /// Test GetMemory
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetMemoryAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.GetMemoryAsync(id);
            var model = response.Ok();
            Assert.IsType<MemoryResponseDto>(model);
        }

        /// <summary>
        /// Test MemoriesStatistics
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task MemoriesStatisticsAsyncTest()
        {
            Client.Option<DateTime> varFor = default!;
            Client.Option<bool> isSaved = default!;
            Client.Option<bool> isTrashed = default!;
            Client.Option<MemoryType> type = default!;
            var response = await _instance.MemoriesStatisticsAsync(varFor, isSaved, isTrashed, type);
            var model = response.Ok();
            Assert.IsType<MemoryStatisticsResponseDto>(model);
        }

        /// <summary>
        /// Test RemoveMemoryAssets
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task RemoveMemoryAssetsAsyncTest()
        {
            Guid id = default!;
            BulkIdsDto bulkIdsDto = default!;
            var response = await _instance.RemoveMemoryAssetsAsync(id, bulkIdsDto);
            var model = response.Ok();
            Assert.IsType<List<BulkIdResponseDto>>(model);
        }

        /// <summary>
        /// Test SearchMemories
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SearchMemoriesAsyncTest()
        {
            Client.Option<DateTime> varFor = default!;
            Client.Option<bool> isSaved = default!;
            Client.Option<bool> isTrashed = default!;
            Client.Option<MemoryType> type = default!;
            var response = await _instance.SearchMemoriesAsync(varFor, isSaved, isTrashed, type);
            var model = response.Ok();
            Assert.IsType<List<MemoryResponseDto>>(model);
        }

        /// <summary>
        /// Test UpdateMemory
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateMemoryAsyncTest()
        {
            Guid id = default!;
            MemoryUpdateDto memoryUpdateDto = default!;
            var response = await _instance.UpdateMemoryAsync(id, memoryUpdateDto);
            var model = response.Ok();
            Assert.IsType<MemoryResponseDto>(model);
        }
    }
}
