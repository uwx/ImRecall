/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Collections.Generic;
using System.Threading.Tasks;
using Xunit;
using Microsoft.Extensions.DependencyInjection;
using Org.OpenAPITools.Api;
using Org.OpenAPITools.Model;


/* *********************************************************************************
*              Follow these manual steps to construct tests.
*              This file will not be overwritten.
*  *********************************************************************************
* 1. Navigate to ApiTests.Base.cs and ensure any tokens are being created correctly.
*    Take care not to commit credentials to any repository.
*
* 2. Mocking is coordinated by ApiTestsBase#AddApiHttpClients.
*    To mock the client, use the generic AddApiHttpClients.
*    To mock the server, change the client's BaseAddress.
*
* 3. Locate the test you want below
*      - remove the skip property from the Fact attribute
*      - set the value of any variables if necessary
*
* 4. Run the tests and ensure they work.
*
*/


namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing UsersAdminApi
    /// </summary>
    public sealed class UsersAdminApiTests : ApiTestsBase
    {
        private readonly IUsersAdminApi _instance;

        public UsersAdminApiTests(): base(Array.Empty<string>())
        {
            _instance = _host.Services.GetRequiredService<IUsersAdminApi>();
        }

        /// <summary>
        /// Test CreateUserAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task CreateUserAdminAsyncTest()
        {
            UserAdminCreateDto userAdminCreateDto = default!;
            var response = await _instance.CreateUserAdminAsync(userAdminCreateDto);
            var model = response.Created();
            Assert.IsType<UserAdminResponseDto>(model);
        }

        /// <summary>
        /// Test DeleteUserAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task DeleteUserAdminAsyncTest()
        {
            Guid id = default!;
            UserAdminDeleteDto userAdminDeleteDto = default!;
            var response = await _instance.DeleteUserAdminAsync(id, userAdminDeleteDto);
            var model = response.Ok();
            Assert.IsType<UserAdminResponseDto>(model);
        }

        /// <summary>
        /// Test GetUserAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetUserAdminAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.GetUserAdminAsync(id);
            var model = response.Ok();
            Assert.IsType<UserAdminResponseDto>(model);
        }

        /// <summary>
        /// Test GetUserPreferencesAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetUserPreferencesAdminAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.GetUserPreferencesAdminAsync(id);
            var model = response.Ok();
            Assert.IsType<UserPreferencesResponseDto>(model);
        }

        /// <summary>
        /// Test GetUserSessionsAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetUserSessionsAdminAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.GetUserSessionsAdminAsync(id);
            var model = response.Ok();
            Assert.IsType<List<SessionResponseDto>>(model);
        }

        /// <summary>
        /// Test GetUserStatisticsAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task GetUserStatisticsAdminAsyncTest()
        {
            Guid id = default!;
            Client.Option<bool> isFavorite = default!;
            Client.Option<bool> isTrashed = default!;
            Client.Option<AssetVisibility> visibility = default!;
            var response = await _instance.GetUserStatisticsAdminAsync(id, isFavorite, isTrashed, visibility);
            var model = response.Ok();
            Assert.IsType<AssetStatsResponseDto>(model);
        }

        /// <summary>
        /// Test RestoreUserAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task RestoreUserAdminAsyncTest()
        {
            Guid id = default!;
            var response = await _instance.RestoreUserAdminAsync(id);
            var model = response.Ok();
            Assert.IsType<UserAdminResponseDto>(model);
        }

        /// <summary>
        /// Test SearchUsersAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task SearchUsersAdminAsyncTest()
        {
            Client.Option<Guid> id = default!;
            Client.Option<bool> withDeleted = default!;
            var response = await _instance.SearchUsersAdminAsync(id, withDeleted);
            var model = response.Ok();
            Assert.IsType<List<UserAdminResponseDto>>(model);
        }

        /// <summary>
        /// Test UpdateUserAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateUserAdminAsyncTest()
        {
            Guid id = default!;
            UserAdminUpdateDto userAdminUpdateDto = default!;
            var response = await _instance.UpdateUserAdminAsync(id, userAdminUpdateDto);
            var model = response.Ok();
            Assert.IsType<UserAdminResponseDto>(model);
        }

        /// <summary>
        /// Test UpdateUserPreferencesAdmin
        /// </summary>
        [Fact (Skip = "not implemented")]
        public async Task UpdateUserPreferencesAdminAsyncTest()
        {
            Guid id = default!;
            UserPreferencesUpdateDto userPreferencesUpdateDto = default!;
            var response = await _instance.UpdateUserPreferencesAdminAsync(id, userPreferencesUpdateDto);
            var model = response.Ok();
            Assert.IsType<UserPreferencesResponseDto>(model);
        }
    }
}
