// <auto-generated>
/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// Defines SyncEntityType
    /// </summary>
    public enum SyncEntityType
    {
        /// <summary>
        /// Enum AuthUserV1 for value: AuthUserV1
        /// </summary>
        AuthUserV1 = 1,

        /// <summary>
        /// Enum UserV1 for value: UserV1
        /// </summary>
        UserV1 = 2,

        /// <summary>
        /// Enum UserDeleteV1 for value: UserDeleteV1
        /// </summary>
        UserDeleteV1 = 3,

        /// <summary>
        /// Enum AssetV1 for value: AssetV1
        /// </summary>
        AssetV1 = 4,

        /// <summary>
        /// Enum AssetDeleteV1 for value: AssetDeleteV1
        /// </summary>
        AssetDeleteV1 = 5,

        /// <summary>
        /// Enum AssetExifV1 for value: AssetExifV1
        /// </summary>
        AssetExifV1 = 6,

        /// <summary>
        /// Enum AssetMetadataV1 for value: AssetMetadataV1
        /// </summary>
        AssetMetadataV1 = 7,

        /// <summary>
        /// Enum AssetMetadataDeleteV1 for value: AssetMetadataDeleteV1
        /// </summary>
        AssetMetadataDeleteV1 = 8,

        /// <summary>
        /// Enum PartnerV1 for value: PartnerV1
        /// </summary>
        PartnerV1 = 9,

        /// <summary>
        /// Enum PartnerDeleteV1 for value: PartnerDeleteV1
        /// </summary>
        PartnerDeleteV1 = 10,

        /// <summary>
        /// Enum PartnerAssetV1 for value: PartnerAssetV1
        /// </summary>
        PartnerAssetV1 = 11,

        /// <summary>
        /// Enum PartnerAssetBackfillV1 for value: PartnerAssetBackfillV1
        /// </summary>
        PartnerAssetBackfillV1 = 12,

        /// <summary>
        /// Enum PartnerAssetDeleteV1 for value: PartnerAssetDeleteV1
        /// </summary>
        PartnerAssetDeleteV1 = 13,

        /// <summary>
        /// Enum PartnerAssetExifV1 for value: PartnerAssetExifV1
        /// </summary>
        PartnerAssetExifV1 = 14,

        /// <summary>
        /// Enum PartnerAssetExifBackfillV1 for value: PartnerAssetExifBackfillV1
        /// </summary>
        PartnerAssetExifBackfillV1 = 15,

        /// <summary>
        /// Enum PartnerStackBackfillV1 for value: PartnerStackBackfillV1
        /// </summary>
        PartnerStackBackfillV1 = 16,

        /// <summary>
        /// Enum PartnerStackDeleteV1 for value: PartnerStackDeleteV1
        /// </summary>
        PartnerStackDeleteV1 = 17,

        /// <summary>
        /// Enum PartnerStackV1 for value: PartnerStackV1
        /// </summary>
        PartnerStackV1 = 18,

        /// <summary>
        /// Enum AlbumV1 for value: AlbumV1
        /// </summary>
        AlbumV1 = 19,

        /// <summary>
        /// Enum AlbumDeleteV1 for value: AlbumDeleteV1
        /// </summary>
        AlbumDeleteV1 = 20,

        /// <summary>
        /// Enum AlbumUserV1 for value: AlbumUserV1
        /// </summary>
        AlbumUserV1 = 21,

        /// <summary>
        /// Enum AlbumUserBackfillV1 for value: AlbumUserBackfillV1
        /// </summary>
        AlbumUserBackfillV1 = 22,

        /// <summary>
        /// Enum AlbumUserDeleteV1 for value: AlbumUserDeleteV1
        /// </summary>
        AlbumUserDeleteV1 = 23,

        /// <summary>
        /// Enum AlbumAssetCreateV1 for value: AlbumAssetCreateV1
        /// </summary>
        AlbumAssetCreateV1 = 24,

        /// <summary>
        /// Enum AlbumAssetUpdateV1 for value: AlbumAssetUpdateV1
        /// </summary>
        AlbumAssetUpdateV1 = 25,

        /// <summary>
        /// Enum AlbumAssetBackfillV1 for value: AlbumAssetBackfillV1
        /// </summary>
        AlbumAssetBackfillV1 = 26,

        /// <summary>
        /// Enum AlbumAssetExifCreateV1 for value: AlbumAssetExifCreateV1
        /// </summary>
        AlbumAssetExifCreateV1 = 27,

        /// <summary>
        /// Enum AlbumAssetExifUpdateV1 for value: AlbumAssetExifUpdateV1
        /// </summary>
        AlbumAssetExifUpdateV1 = 28,

        /// <summary>
        /// Enum AlbumAssetExifBackfillV1 for value: AlbumAssetExifBackfillV1
        /// </summary>
        AlbumAssetExifBackfillV1 = 29,

        /// <summary>
        /// Enum AlbumToAssetV1 for value: AlbumToAssetV1
        /// </summary>
        AlbumToAssetV1 = 30,

        /// <summary>
        /// Enum AlbumToAssetDeleteV1 for value: AlbumToAssetDeleteV1
        /// </summary>
        AlbumToAssetDeleteV1 = 31,

        /// <summary>
        /// Enum AlbumToAssetBackfillV1 for value: AlbumToAssetBackfillV1
        /// </summary>
        AlbumToAssetBackfillV1 = 32,

        /// <summary>
        /// Enum MemoryV1 for value: MemoryV1
        /// </summary>
        MemoryV1 = 33,

        /// <summary>
        /// Enum MemoryDeleteV1 for value: MemoryDeleteV1
        /// </summary>
        MemoryDeleteV1 = 34,

        /// <summary>
        /// Enum MemoryToAssetV1 for value: MemoryToAssetV1
        /// </summary>
        MemoryToAssetV1 = 35,

        /// <summary>
        /// Enum MemoryToAssetDeleteV1 for value: MemoryToAssetDeleteV1
        /// </summary>
        MemoryToAssetDeleteV1 = 36,

        /// <summary>
        /// Enum StackV1 for value: StackV1
        /// </summary>
        StackV1 = 37,

        /// <summary>
        /// Enum StackDeleteV1 for value: StackDeleteV1
        /// </summary>
        StackDeleteV1 = 38,

        /// <summary>
        /// Enum PersonV1 for value: PersonV1
        /// </summary>
        PersonV1 = 39,

        /// <summary>
        /// Enum PersonDeleteV1 for value: PersonDeleteV1
        /// </summary>
        PersonDeleteV1 = 40,

        /// <summary>
        /// Enum AssetFaceV1 for value: AssetFaceV1
        /// </summary>
        AssetFaceV1 = 41,

        /// <summary>
        /// Enum AssetFaceDeleteV1 for value: AssetFaceDeleteV1
        /// </summary>
        AssetFaceDeleteV1 = 42,

        /// <summary>
        /// Enum UserMetadataV1 for value: UserMetadataV1
        /// </summary>
        UserMetadataV1 = 43,

        /// <summary>
        /// Enum UserMetadataDeleteV1 for value: UserMetadataDeleteV1
        /// </summary>
        UserMetadataDeleteV1 = 44,

        /// <summary>
        /// Enum SyncAckV1 for value: SyncAckV1
        /// </summary>
        SyncAckV1 = 45,

        /// <summary>
        /// Enum SyncResetV1 for value: SyncResetV1
        /// </summary>
        SyncResetV1 = 46,

        /// <summary>
        /// Enum SyncCompleteV1 for value: SyncCompleteV1
        /// </summary>
        SyncCompleteV1 = 47
    }

    /// <summary>
    /// Converts <see cref="SyncEntityType"/> to and from the JSON value
    /// </summary>
    public static class SyncEntityTypeValueConverter
    {
        /// <summary>
        /// Parses a given value to <see cref="SyncEntityType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SyncEntityType FromString(string value)
        {
            if (value.Equals("AuthUserV1"))
                return SyncEntityType.AuthUserV1;

            if (value.Equals("UserV1"))
                return SyncEntityType.UserV1;

            if (value.Equals("UserDeleteV1"))
                return SyncEntityType.UserDeleteV1;

            if (value.Equals("AssetV1"))
                return SyncEntityType.AssetV1;

            if (value.Equals("AssetDeleteV1"))
                return SyncEntityType.AssetDeleteV1;

            if (value.Equals("AssetExifV1"))
                return SyncEntityType.AssetExifV1;

            if (value.Equals("AssetMetadataV1"))
                return SyncEntityType.AssetMetadataV1;

            if (value.Equals("AssetMetadataDeleteV1"))
                return SyncEntityType.AssetMetadataDeleteV1;

            if (value.Equals("PartnerV1"))
                return SyncEntityType.PartnerV1;

            if (value.Equals("PartnerDeleteV1"))
                return SyncEntityType.PartnerDeleteV1;

            if (value.Equals("PartnerAssetV1"))
                return SyncEntityType.PartnerAssetV1;

            if (value.Equals("PartnerAssetBackfillV1"))
                return SyncEntityType.PartnerAssetBackfillV1;

            if (value.Equals("PartnerAssetDeleteV1"))
                return SyncEntityType.PartnerAssetDeleteV1;

            if (value.Equals("PartnerAssetExifV1"))
                return SyncEntityType.PartnerAssetExifV1;

            if (value.Equals("PartnerAssetExifBackfillV1"))
                return SyncEntityType.PartnerAssetExifBackfillV1;

            if (value.Equals("PartnerStackBackfillV1"))
                return SyncEntityType.PartnerStackBackfillV1;

            if (value.Equals("PartnerStackDeleteV1"))
                return SyncEntityType.PartnerStackDeleteV1;

            if (value.Equals("PartnerStackV1"))
                return SyncEntityType.PartnerStackV1;

            if (value.Equals("AlbumV1"))
                return SyncEntityType.AlbumV1;

            if (value.Equals("AlbumDeleteV1"))
                return SyncEntityType.AlbumDeleteV1;

            if (value.Equals("AlbumUserV1"))
                return SyncEntityType.AlbumUserV1;

            if (value.Equals("AlbumUserBackfillV1"))
                return SyncEntityType.AlbumUserBackfillV1;

            if (value.Equals("AlbumUserDeleteV1"))
                return SyncEntityType.AlbumUserDeleteV1;

            if (value.Equals("AlbumAssetCreateV1"))
                return SyncEntityType.AlbumAssetCreateV1;

            if (value.Equals("AlbumAssetUpdateV1"))
                return SyncEntityType.AlbumAssetUpdateV1;

            if (value.Equals("AlbumAssetBackfillV1"))
                return SyncEntityType.AlbumAssetBackfillV1;

            if (value.Equals("AlbumAssetExifCreateV1"))
                return SyncEntityType.AlbumAssetExifCreateV1;

            if (value.Equals("AlbumAssetExifUpdateV1"))
                return SyncEntityType.AlbumAssetExifUpdateV1;

            if (value.Equals("AlbumAssetExifBackfillV1"))
                return SyncEntityType.AlbumAssetExifBackfillV1;

            if (value.Equals("AlbumToAssetV1"))
                return SyncEntityType.AlbumToAssetV1;

            if (value.Equals("AlbumToAssetDeleteV1"))
                return SyncEntityType.AlbumToAssetDeleteV1;

            if (value.Equals("AlbumToAssetBackfillV1"))
                return SyncEntityType.AlbumToAssetBackfillV1;

            if (value.Equals("MemoryV1"))
                return SyncEntityType.MemoryV1;

            if (value.Equals("MemoryDeleteV1"))
                return SyncEntityType.MemoryDeleteV1;

            if (value.Equals("MemoryToAssetV1"))
                return SyncEntityType.MemoryToAssetV1;

            if (value.Equals("MemoryToAssetDeleteV1"))
                return SyncEntityType.MemoryToAssetDeleteV1;

            if (value.Equals("StackV1"))
                return SyncEntityType.StackV1;

            if (value.Equals("StackDeleteV1"))
                return SyncEntityType.StackDeleteV1;

            if (value.Equals("PersonV1"))
                return SyncEntityType.PersonV1;

            if (value.Equals("PersonDeleteV1"))
                return SyncEntityType.PersonDeleteV1;

            if (value.Equals("AssetFaceV1"))
                return SyncEntityType.AssetFaceV1;

            if (value.Equals("AssetFaceDeleteV1"))
                return SyncEntityType.AssetFaceDeleteV1;

            if (value.Equals("UserMetadataV1"))
                return SyncEntityType.UserMetadataV1;

            if (value.Equals("UserMetadataDeleteV1"))
                return SyncEntityType.UserMetadataDeleteV1;

            if (value.Equals("SyncAckV1"))
                return SyncEntityType.SyncAckV1;

            if (value.Equals("SyncResetV1"))
                return SyncEntityType.SyncResetV1;

            if (value.Equals("SyncCompleteV1"))
                return SyncEntityType.SyncCompleteV1;

            throw new NotImplementedException($"Could not convert value to type SyncEntityType: '{value}'");
        }

        /// <summary>
        /// Parses a given value to <see cref="SyncEntityType"/>
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        public static SyncEntityType? FromStringOrDefault(string value)
        {
            if (value.Equals("AuthUserV1"))
                return SyncEntityType.AuthUserV1;

            if (value.Equals("UserV1"))
                return SyncEntityType.UserV1;

            if (value.Equals("UserDeleteV1"))
                return SyncEntityType.UserDeleteV1;

            if (value.Equals("AssetV1"))
                return SyncEntityType.AssetV1;

            if (value.Equals("AssetDeleteV1"))
                return SyncEntityType.AssetDeleteV1;

            if (value.Equals("AssetExifV1"))
                return SyncEntityType.AssetExifV1;

            if (value.Equals("AssetMetadataV1"))
                return SyncEntityType.AssetMetadataV1;

            if (value.Equals("AssetMetadataDeleteV1"))
                return SyncEntityType.AssetMetadataDeleteV1;

            if (value.Equals("PartnerV1"))
                return SyncEntityType.PartnerV1;

            if (value.Equals("PartnerDeleteV1"))
                return SyncEntityType.PartnerDeleteV1;

            if (value.Equals("PartnerAssetV1"))
                return SyncEntityType.PartnerAssetV1;

            if (value.Equals("PartnerAssetBackfillV1"))
                return SyncEntityType.PartnerAssetBackfillV1;

            if (value.Equals("PartnerAssetDeleteV1"))
                return SyncEntityType.PartnerAssetDeleteV1;

            if (value.Equals("PartnerAssetExifV1"))
                return SyncEntityType.PartnerAssetExifV1;

            if (value.Equals("PartnerAssetExifBackfillV1"))
                return SyncEntityType.PartnerAssetExifBackfillV1;

            if (value.Equals("PartnerStackBackfillV1"))
                return SyncEntityType.PartnerStackBackfillV1;

            if (value.Equals("PartnerStackDeleteV1"))
                return SyncEntityType.PartnerStackDeleteV1;

            if (value.Equals("PartnerStackV1"))
                return SyncEntityType.PartnerStackV1;

            if (value.Equals("AlbumV1"))
                return SyncEntityType.AlbumV1;

            if (value.Equals("AlbumDeleteV1"))
                return SyncEntityType.AlbumDeleteV1;

            if (value.Equals("AlbumUserV1"))
                return SyncEntityType.AlbumUserV1;

            if (value.Equals("AlbumUserBackfillV1"))
                return SyncEntityType.AlbumUserBackfillV1;

            if (value.Equals("AlbumUserDeleteV1"))
                return SyncEntityType.AlbumUserDeleteV1;

            if (value.Equals("AlbumAssetCreateV1"))
                return SyncEntityType.AlbumAssetCreateV1;

            if (value.Equals("AlbumAssetUpdateV1"))
                return SyncEntityType.AlbumAssetUpdateV1;

            if (value.Equals("AlbumAssetBackfillV1"))
                return SyncEntityType.AlbumAssetBackfillV1;

            if (value.Equals("AlbumAssetExifCreateV1"))
                return SyncEntityType.AlbumAssetExifCreateV1;

            if (value.Equals("AlbumAssetExifUpdateV1"))
                return SyncEntityType.AlbumAssetExifUpdateV1;

            if (value.Equals("AlbumAssetExifBackfillV1"))
                return SyncEntityType.AlbumAssetExifBackfillV1;

            if (value.Equals("AlbumToAssetV1"))
                return SyncEntityType.AlbumToAssetV1;

            if (value.Equals("AlbumToAssetDeleteV1"))
                return SyncEntityType.AlbumToAssetDeleteV1;

            if (value.Equals("AlbumToAssetBackfillV1"))
                return SyncEntityType.AlbumToAssetBackfillV1;

            if (value.Equals("MemoryV1"))
                return SyncEntityType.MemoryV1;

            if (value.Equals("MemoryDeleteV1"))
                return SyncEntityType.MemoryDeleteV1;

            if (value.Equals("MemoryToAssetV1"))
                return SyncEntityType.MemoryToAssetV1;

            if (value.Equals("MemoryToAssetDeleteV1"))
                return SyncEntityType.MemoryToAssetDeleteV1;

            if (value.Equals("StackV1"))
                return SyncEntityType.StackV1;

            if (value.Equals("StackDeleteV1"))
                return SyncEntityType.StackDeleteV1;

            if (value.Equals("PersonV1"))
                return SyncEntityType.PersonV1;

            if (value.Equals("PersonDeleteV1"))
                return SyncEntityType.PersonDeleteV1;

            if (value.Equals("AssetFaceV1"))
                return SyncEntityType.AssetFaceV1;

            if (value.Equals("AssetFaceDeleteV1"))
                return SyncEntityType.AssetFaceDeleteV1;

            if (value.Equals("UserMetadataV1"))
                return SyncEntityType.UserMetadataV1;

            if (value.Equals("UserMetadataDeleteV1"))
                return SyncEntityType.UserMetadataDeleteV1;

            if (value.Equals("SyncAckV1"))
                return SyncEntityType.SyncAckV1;

            if (value.Equals("SyncResetV1"))
                return SyncEntityType.SyncResetV1;

            if (value.Equals("SyncCompleteV1"))
                return SyncEntityType.SyncCompleteV1;

            return null;
        }

        /// <summary>
        /// Converts the <see cref="SyncEntityType"/> to the json value
        /// </summary>
        /// <param name="value"></param>
        /// <returns></returns>
        /// <exception cref="NotImplementedException"></exception>
        public static string ToJsonValue(SyncEntityType value)
        {
            if (value == SyncEntityType.AuthUserV1)
                return "AuthUserV1";

            if (value == SyncEntityType.UserV1)
                return "UserV1";

            if (value == SyncEntityType.UserDeleteV1)
                return "UserDeleteV1";

            if (value == SyncEntityType.AssetV1)
                return "AssetV1";

            if (value == SyncEntityType.AssetDeleteV1)
                return "AssetDeleteV1";

            if (value == SyncEntityType.AssetExifV1)
                return "AssetExifV1";

            if (value == SyncEntityType.AssetMetadataV1)
                return "AssetMetadataV1";

            if (value == SyncEntityType.AssetMetadataDeleteV1)
                return "AssetMetadataDeleteV1";

            if (value == SyncEntityType.PartnerV1)
                return "PartnerV1";

            if (value == SyncEntityType.PartnerDeleteV1)
                return "PartnerDeleteV1";

            if (value == SyncEntityType.PartnerAssetV1)
                return "PartnerAssetV1";

            if (value == SyncEntityType.PartnerAssetBackfillV1)
                return "PartnerAssetBackfillV1";

            if (value == SyncEntityType.PartnerAssetDeleteV1)
                return "PartnerAssetDeleteV1";

            if (value == SyncEntityType.PartnerAssetExifV1)
                return "PartnerAssetExifV1";

            if (value == SyncEntityType.PartnerAssetExifBackfillV1)
                return "PartnerAssetExifBackfillV1";

            if (value == SyncEntityType.PartnerStackBackfillV1)
                return "PartnerStackBackfillV1";

            if (value == SyncEntityType.PartnerStackDeleteV1)
                return "PartnerStackDeleteV1";

            if (value == SyncEntityType.PartnerStackV1)
                return "PartnerStackV1";

            if (value == SyncEntityType.AlbumV1)
                return "AlbumV1";

            if (value == SyncEntityType.AlbumDeleteV1)
                return "AlbumDeleteV1";

            if (value == SyncEntityType.AlbumUserV1)
                return "AlbumUserV1";

            if (value == SyncEntityType.AlbumUserBackfillV1)
                return "AlbumUserBackfillV1";

            if (value == SyncEntityType.AlbumUserDeleteV1)
                return "AlbumUserDeleteV1";

            if (value == SyncEntityType.AlbumAssetCreateV1)
                return "AlbumAssetCreateV1";

            if (value == SyncEntityType.AlbumAssetUpdateV1)
                return "AlbumAssetUpdateV1";

            if (value == SyncEntityType.AlbumAssetBackfillV1)
                return "AlbumAssetBackfillV1";

            if (value == SyncEntityType.AlbumAssetExifCreateV1)
                return "AlbumAssetExifCreateV1";

            if (value == SyncEntityType.AlbumAssetExifUpdateV1)
                return "AlbumAssetExifUpdateV1";

            if (value == SyncEntityType.AlbumAssetExifBackfillV1)
                return "AlbumAssetExifBackfillV1";

            if (value == SyncEntityType.AlbumToAssetV1)
                return "AlbumToAssetV1";

            if (value == SyncEntityType.AlbumToAssetDeleteV1)
                return "AlbumToAssetDeleteV1";

            if (value == SyncEntityType.AlbumToAssetBackfillV1)
                return "AlbumToAssetBackfillV1";

            if (value == SyncEntityType.MemoryV1)
                return "MemoryV1";

            if (value == SyncEntityType.MemoryDeleteV1)
                return "MemoryDeleteV1";

            if (value == SyncEntityType.MemoryToAssetV1)
                return "MemoryToAssetV1";

            if (value == SyncEntityType.MemoryToAssetDeleteV1)
                return "MemoryToAssetDeleteV1";

            if (value == SyncEntityType.StackV1)
                return "StackV1";

            if (value == SyncEntityType.StackDeleteV1)
                return "StackDeleteV1";

            if (value == SyncEntityType.PersonV1)
                return "PersonV1";

            if (value == SyncEntityType.PersonDeleteV1)
                return "PersonDeleteV1";

            if (value == SyncEntityType.AssetFaceV1)
                return "AssetFaceV1";

            if (value == SyncEntityType.AssetFaceDeleteV1)
                return "AssetFaceDeleteV1";

            if (value == SyncEntityType.UserMetadataV1)
                return "UserMetadataV1";

            if (value == SyncEntityType.UserMetadataDeleteV1)
                return "UserMetadataDeleteV1";

            if (value == SyncEntityType.SyncAckV1)
                return "SyncAckV1";

            if (value == SyncEntityType.SyncResetV1)
                return "SyncResetV1";

            if (value == SyncEntityType.SyncCompleteV1)
                return "SyncCompleteV1";

            throw new NotImplementedException($"Value could not be handled: '{value}'");
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="SyncEntityType"/>
    /// </summary>
    /// <exception cref="NotImplementedException"></exception>
    public class SyncEntityTypeJsonConverter : JsonConverter<SyncEntityType>
    {
        /// <summary>
        /// Returns a  from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override SyncEntityType Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            SyncEntityType? result = rawValue == null
                ? null
                : SyncEntityTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the SyncEntityType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="syncEntityType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, SyncEntityType syncEntityType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(SyncEntityTypeValueConverter.ToJsonValue(syncEntityType).ToString());
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="SyncEntityType"/>
    /// </summary>
    public class SyncEntityTypeNullableJsonConverter : JsonConverter<SyncEntityType?>
    {
        /// <summary>
        /// Returns a SyncEntityType from the Json object
        /// </summary>
        /// <param name="reader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="options"></param>
        /// <returns></returns>
        public override SyncEntityType? Read(ref Utf8JsonReader reader, Type typeToConvert, JsonSerializerOptions options)
        {
            string? rawValue = reader.GetString();

            SyncEntityType? result = rawValue == null
                ? null
                : SyncEntityTypeValueConverter.FromStringOrDefault(rawValue);

            if (result != null)
                return result.Value;

            throw new JsonException();
        }

        /// <summary>
        /// Writes the SyncEntityType to the json writer
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="syncEntityType"></param>
        /// <param name="options"></param>
        public override void Write(Utf8JsonWriter writer, SyncEntityType? syncEntityType, JsonSerializerOptions options)
        {
            writer.WriteStringValue(syncEntityType.HasValue ? SyncEntityTypeValueConverter.ToJsonValue(syncEntityType.Value).ToString() : "null");
        }
    }
}
