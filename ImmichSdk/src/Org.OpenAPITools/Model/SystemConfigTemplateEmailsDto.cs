// <auto-generated>
/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// SystemConfigTemplateEmailsDto
    /// </summary>
    public partial class SystemConfigTemplateEmailsDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemConfigTemplateEmailsDto" /> class.
        /// </summary>
        /// <param name="albumInviteTemplate">albumInviteTemplate</param>
        /// <param name="albumUpdateTemplate">albumUpdateTemplate</param>
        /// <param name="welcomeTemplate">welcomeTemplate</param>
        [JsonConstructor]
        public SystemConfigTemplateEmailsDto(string albumInviteTemplate, string albumUpdateTemplate, string welcomeTemplate)
        {
            AlbumInviteTemplate = albumInviteTemplate;
            AlbumUpdateTemplate = albumUpdateTemplate;
            WelcomeTemplate = welcomeTemplate;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets AlbumInviteTemplate
        /// </summary>
        [JsonPropertyName("albumInviteTemplate")]
        public string AlbumInviteTemplate { get; set; }

        /// <summary>
        /// Gets or Sets AlbumUpdateTemplate
        /// </summary>
        [JsonPropertyName("albumUpdateTemplate")]
        public string AlbumUpdateTemplate { get; set; }

        /// <summary>
        /// Gets or Sets WelcomeTemplate
        /// </summary>
        [JsonPropertyName("welcomeTemplate")]
        public string WelcomeTemplate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SystemConfigTemplateEmailsDto {\n");
            sb.Append("  AlbumInviteTemplate: ").Append(AlbumInviteTemplate).Append("\n");
            sb.Append("  AlbumUpdateTemplate: ").Append(AlbumUpdateTemplate).Append("\n");
            sb.Append("  WelcomeTemplate: ").Append(WelcomeTemplate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="SystemConfigTemplateEmailsDto" />
    /// </summary>
    public class SystemConfigTemplateEmailsDtoJsonConverter : JsonConverter<SystemConfigTemplateEmailsDto>
    {
        /// <summary>
        /// Deserializes json to <see cref="SystemConfigTemplateEmailsDto" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override SystemConfigTemplateEmailsDto Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<string?> albumInviteTemplate = default;
            Option<string?> albumUpdateTemplate = default;
            Option<string?> welcomeTemplate = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "albumInviteTemplate":
                            albumInviteTemplate = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "albumUpdateTemplate":
                            albumUpdateTemplate = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "welcomeTemplate":
                            welcomeTemplate = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!albumInviteTemplate.IsSet)
                throw new ArgumentException("Property is required for class SystemConfigTemplateEmailsDto.", nameof(albumInviteTemplate));

            if (!albumUpdateTemplate.IsSet)
                throw new ArgumentException("Property is required for class SystemConfigTemplateEmailsDto.", nameof(albumUpdateTemplate));

            if (!welcomeTemplate.IsSet)
                throw new ArgumentException("Property is required for class SystemConfigTemplateEmailsDto.", nameof(welcomeTemplate));

            if (albumInviteTemplate.IsSet && albumInviteTemplate.Value == null)
                throw new ArgumentNullException(nameof(albumInviteTemplate), "Property is not nullable for class SystemConfigTemplateEmailsDto.");

            if (albumUpdateTemplate.IsSet && albumUpdateTemplate.Value == null)
                throw new ArgumentNullException(nameof(albumUpdateTemplate), "Property is not nullable for class SystemConfigTemplateEmailsDto.");

            if (welcomeTemplate.IsSet && welcomeTemplate.Value == null)
                throw new ArgumentNullException(nameof(welcomeTemplate), "Property is not nullable for class SystemConfigTemplateEmailsDto.");

            return new SystemConfigTemplateEmailsDto(albumInviteTemplate.Value!, albumUpdateTemplate.Value!, welcomeTemplate.Value!);
        }

        /// <summary>
        /// Serializes a <see cref="SystemConfigTemplateEmailsDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="systemConfigTemplateEmailsDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, SystemConfigTemplateEmailsDto systemConfigTemplateEmailsDto, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, systemConfigTemplateEmailsDto, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="SystemConfigTemplateEmailsDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="systemConfigTemplateEmailsDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, SystemConfigTemplateEmailsDto systemConfigTemplateEmailsDto, JsonSerializerOptions jsonSerializerOptions)
        {
            if (systemConfigTemplateEmailsDto.AlbumInviteTemplate == null)
                throw new ArgumentNullException(nameof(systemConfigTemplateEmailsDto.AlbumInviteTemplate), "Property is required for class SystemConfigTemplateEmailsDto.");

            if (systemConfigTemplateEmailsDto.AlbumUpdateTemplate == null)
                throw new ArgumentNullException(nameof(systemConfigTemplateEmailsDto.AlbumUpdateTemplate), "Property is required for class SystemConfigTemplateEmailsDto.");

            if (systemConfigTemplateEmailsDto.WelcomeTemplate == null)
                throw new ArgumentNullException(nameof(systemConfigTemplateEmailsDto.WelcomeTemplate), "Property is required for class SystemConfigTemplateEmailsDto.");

            writer.WriteString("albumInviteTemplate", systemConfigTemplateEmailsDto.AlbumInviteTemplate);

            writer.WriteString("albumUpdateTemplate", systemConfigTemplateEmailsDto.AlbumUpdateTemplate);

            writer.WriteString("welcomeTemplate", systemConfigTemplateEmailsDto.WelcomeTemplate);
        }
    }
}
