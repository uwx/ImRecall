// <auto-generated>
/*
 * Immich
 *
 * Immich API
 *
 * The version of the OpenAPI document: 2.1.0
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

#nullable enable

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Text.Json;
using System.Text.Json.Serialization;
using System.ComponentModel.DataAnnotations;
using Org.OpenAPITools.Client;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CreateProfileImageResponseDto
    /// </summary>
    public partial class CreateProfileImageResponseDto : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CreateProfileImageResponseDto" /> class.
        /// </summary>
        /// <param name="profileChangedAt">profileChangedAt</param>
        /// <param name="profileImagePath">profileImagePath</param>
        /// <param name="userId">userId</param>
        [JsonConstructor]
        public CreateProfileImageResponseDto(DateTime profileChangedAt, string profileImagePath, string userId)
        {
            ProfileChangedAt = profileChangedAt;
            ProfileImagePath = profileImagePath;
            UserId = userId;
            OnCreated();
        }

        partial void OnCreated();

        /// <summary>
        /// Gets or Sets ProfileChangedAt
        /// </summary>
        [JsonPropertyName("profileChangedAt")]
        public DateTime ProfileChangedAt { get; set; }

        /// <summary>
        /// Gets or Sets ProfileImagePath
        /// </summary>
        [JsonPropertyName("profileImagePath")]
        public string ProfileImagePath { get; set; }

        /// <summary>
        /// Gets or Sets UserId
        /// </summary>
        [JsonPropertyName("userId")]
        public string UserId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class CreateProfileImageResponseDto {\n");
            sb.Append("  ProfileChangedAt: ").Append(ProfileChangedAt).Append("\n");
            sb.Append("  ProfileImagePath: ").Append(ProfileImagePath).Append("\n");
            sb.Append("  UserId: ").Append(UserId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

    /// <summary>
    /// A Json converter for type <see cref="CreateProfileImageResponseDto" />
    /// </summary>
    public class CreateProfileImageResponseDtoJsonConverter : JsonConverter<CreateProfileImageResponseDto>
    {
        /// <summary>
        /// The format to use to serialize ProfileChangedAt
        /// </summary>
        public static string ProfileChangedAtFormat { get; set; } = "yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffK";

        /// <summary>
        /// Deserializes json to <see cref="CreateProfileImageResponseDto" />
        /// </summary>
        /// <param name="utf8JsonReader"></param>
        /// <param name="typeToConvert"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <returns></returns>
        /// <exception cref="JsonException"></exception>
        public override CreateProfileImageResponseDto Read(ref Utf8JsonReader utf8JsonReader, Type typeToConvert, JsonSerializerOptions jsonSerializerOptions)
        {
            int currentDepth = utf8JsonReader.CurrentDepth;

            if (utf8JsonReader.TokenType != JsonTokenType.StartObject && utf8JsonReader.TokenType != JsonTokenType.StartArray)
                throw new JsonException();

            JsonTokenType startingTokenType = utf8JsonReader.TokenType;

            Option<DateTime?> profileChangedAt = default;
            Option<string?> profileImagePath = default;
            Option<string?> userId = default;

            while (utf8JsonReader.Read())
            {
                if (startingTokenType == JsonTokenType.StartObject && utf8JsonReader.TokenType == JsonTokenType.EndObject && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (startingTokenType == JsonTokenType.StartArray && utf8JsonReader.TokenType == JsonTokenType.EndArray && currentDepth == utf8JsonReader.CurrentDepth)
                    break;

                if (utf8JsonReader.TokenType == JsonTokenType.PropertyName && currentDepth == utf8JsonReader.CurrentDepth - 1)
                {
                    string? localVarJsonPropertyName = utf8JsonReader.GetString();
                    utf8JsonReader.Read();

                    switch (localVarJsonPropertyName)
                    {
                        case "profileChangedAt":
                            profileChangedAt = new Option<DateTime?>(JsonSerializer.Deserialize<DateTime>(ref utf8JsonReader, jsonSerializerOptions));
                            break;
                        case "profileImagePath":
                            profileImagePath = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        case "userId":
                            userId = new Option<string?>(utf8JsonReader.GetString()!);
                            break;
                        default:
                            break;
                    }
                }
            }

            if (!profileChangedAt.IsSet)
                throw new ArgumentException("Property is required for class CreateProfileImageResponseDto.", nameof(profileChangedAt));

            if (!profileImagePath.IsSet)
                throw new ArgumentException("Property is required for class CreateProfileImageResponseDto.", nameof(profileImagePath));

            if (!userId.IsSet)
                throw new ArgumentException("Property is required for class CreateProfileImageResponseDto.", nameof(userId));

            if (profileChangedAt.IsSet && profileChangedAt.Value == null)
                throw new ArgumentNullException(nameof(profileChangedAt), "Property is not nullable for class CreateProfileImageResponseDto.");

            if (profileImagePath.IsSet && profileImagePath.Value == null)
                throw new ArgumentNullException(nameof(profileImagePath), "Property is not nullable for class CreateProfileImageResponseDto.");

            if (userId.IsSet && userId.Value == null)
                throw new ArgumentNullException(nameof(userId), "Property is not nullable for class CreateProfileImageResponseDto.");

            return new CreateProfileImageResponseDto(profileChangedAt.Value!.Value!, profileImagePath.Value!, userId.Value!);
        }

        /// <summary>
        /// Serializes a <see cref="CreateProfileImageResponseDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createProfileImageResponseDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public override void Write(Utf8JsonWriter writer, CreateProfileImageResponseDto createProfileImageResponseDto, JsonSerializerOptions jsonSerializerOptions)
        {
            writer.WriteStartObject();

            WriteProperties(writer, createProfileImageResponseDto, jsonSerializerOptions);
            writer.WriteEndObject();
        }

        /// <summary>
        /// Serializes the properties of <see cref="CreateProfileImageResponseDto" />
        /// </summary>
        /// <param name="writer"></param>
        /// <param name="createProfileImageResponseDto"></param>
        /// <param name="jsonSerializerOptions"></param>
        /// <exception cref="NotImplementedException"></exception>
        public void WriteProperties(Utf8JsonWriter writer, CreateProfileImageResponseDto createProfileImageResponseDto, JsonSerializerOptions jsonSerializerOptions)
        {
            if (createProfileImageResponseDto.ProfileImagePath == null)
                throw new ArgumentNullException(nameof(createProfileImageResponseDto.ProfileImagePath), "Property is required for class CreateProfileImageResponseDto.");

            if (createProfileImageResponseDto.UserId == null)
                throw new ArgumentNullException(nameof(createProfileImageResponseDto.UserId), "Property is required for class CreateProfileImageResponseDto.");

            writer.WriteString("profileChangedAt", createProfileImageResponseDto.ProfileChangedAt.ToString(ProfileChangedAtFormat));

            writer.WriteString("profileImagePath", createProfileImageResponseDto.ProfileImagePath);

            writer.WriteString("userId", createProfileImageResponseDto.UserId);
        }
    }
}
